0.1.72 - 2016-06-10 - Fixed append support for OptimizedStreamOutput
  - Fixed append support for OptimizedStreamOutput
0.1.71 - 2016-06-09 - Added append support for OptimizedStreamOutput
  - Added append support for OptimizedStreamOutput
0.1.70 - 2016-05-31 - Fixes in SimpleBuffers::JSONReader
  - Fixed NULL szName used in status setup when element is an array
0.1.69 - 2016-05-19 - Fixes in TaskExecutor
  - Fixed priority setup mistype in task thread
  - Threads prority is restored to normal in Stop (so that dormant threads can be stopped - Windows)
0.1.68 - 2016-05-05 - Added XML & JSON Node
  - Fixed SparseHash warning (sparsehashtable.h:844)
  - Added XML parser
  - Added MO parser
  - Added XML Node
  - Added JSON Node
  - Added Data::MO::Language class
  - Added wildmat support
  - Fixed IO::MemInputStream SetPos
0.1.67 - 2016-04-21 - Updated SparseHash to 2.0.3
  - Updated SparseHash to 2.0.3
  - Fixed SparseHash readme
  - Added *.VC.db as ignored (VS2015 update 2)
0.1.66 - 2016-04-07 - Fixed Task queue empty event not signaled on creation
  - Fixed Task queue empty event not signaled on creation
0.1.65 - 2016-03-11 - Fixed RndGen compilation
  - Fixed RndGen compilation
  - Fixed version
0.1.64 - 2016-03-11 - Fixed UTF8 conversion crash
  - Fixed UTF8 conversion crash
0.1.63 - 2016-03-03 - Added Util::RndGen::Copy
  - Added Util::RndGen::Copy
  - Fixed copyright notice
0.1.62 - 2016-02-23 - Simplebuffers JSONReader & Log::OptimizedStreamOutput fixes
  - Simplebuffers JSONReader fixes for type detection (int64 & uint64)
  - Log::OptimizedStreamOutput fixes
  - Changed version
0.1.62 - 2016-02-23 - Simplebuffers JSONReader & Log::OptimizedStreamOutput fixes
  - Simplebuffers JSONReader fixes for type detection (int64 & uint64)
  - Log::OptimizedStreamOutput fixes
0.1.60 - 2016-02-18 - added Log::OptimizedStreamOutput
  - Added Log::OptimizedStreamOutput
  - Improved TaskExecutor with custom executor
0.1.59 - 2016-02-17 - added TaskExecutor & TaskQueue
  - Added TaskExecutor
  - Added TaskQueue
0.1.58 - 2016-02-10 - SimpleBuffers fixes
  - CX::SimpleBuffers::ISimpleBuffer::GetMembersCount is now const
  - CX::SimpleBuffers::ISimpleBuffer::GetMemberLoaded is now const
  - Added static const Char *OBJECT_NAME() in all CX::SimpleBuffers::ISimpleBuffer
  - Added virtual const Char *GetObjectName() const in CX::SimpleBuffers::ISimpleBuffer
  - Float and double members of SimpleBuffers accept integers too in JSON
  - CX::Util::RndGen supports now multiple instances
  - Changed copyright from 2014-2015 to 2014 - 2026 :)
0.1.57 - 2015-12-15 - Added VS 2015 support
  - Added VS 2015 support
0.1.56 - 2015-12-15 - Added VS 2015 support
  - Added VS 2015 support
0.1.55 - 2015-12-14 - Added VS 2015 support
  - Added VS 2015 support
0.1.54 - 2015-12-03 - Better random ranges; fixed playground tester
  - Better random ranges; fixed playground tester
0.1.53 - 2015-11-23 - SimpleBuffers: added support for testing if an optional member was loaded
  - SimpleBuffers: added support for testing if an optional member was loaded
0.1.52 - 2015-11-15 - Removed mem tracking (win only) - for now
  - Removed mem tracking (win only) - for now
0.1.51 - 2015-11-14 - Fixed InitOnceExecuteOnce param not set
  - Fixed InitOnceExecuteOnce param not set
0.1.50 - 2015-11-08 - Fixed RndGen signed int range
  - Fixed RndGen signed int range
0.1.49 - 2015-11-02 - Fixed SimpleBuffers CPP Generator (Init)
  - Fixed SimpleBuffers CPP Generator (Init)
0.1.48 - 2015-11-01 - Added SimpleBuffers DataIniter & ISimpleBuffer::Init
  - Added SimpleBuffers DataIniter & ISimpleBuffer::Init
0.1.47 - 2015-11-01 - Added SimpleBuffers DataIniter & ISimpleBuffer::Init
  - Added SimpleBuffers DataIniter & ISimpleBuffer::Init
0.1.46 - 2015-10-31 - Fixed android build
  - Fixed android build
0.1.45 - 2015-10-31 - Improved memory tracking (windows only), fixed contrib warnings, fixed SimpleBuffers, added CX version
  - Fixed contrib warnings
  - Updated CX version
  - Fixed BINReader & BINWriter
  - Fixed JSONReader & JSONWriter
  - Improved memory tracking (windows only)
0.1.44 - 2015-10-27 - New IO filters and stream fixes
  - Added max mem alloc option for mem dbg
  - Revamped IO filters 
  - Refactored IO::FilteredInputStream
  - Refactored IO::FilteredOutputStream
  - Removed Archive/LZHAMFilter
  - Removed Archive/CryptFilter
  - Added Crypt/AES128InputFilter
  - Added Crypt/AES128OutputFilter
  - Added Archive/LZHAMInputFilter
  - Added Archive/LZHAMOutputFilter
  - Added Archive/LZ4InputFilter
  - Added Archive/LZ4OutputFilter
  - Added Archive/SnappyInputFilter
  - Added Archive/SnappyOutputFilter
  - Fixed IO::MemOutputStream MemPool copy 
  - Fixed IO::MemInputStream read EOF
  - Fixed Android build
0.1.43 - 2015-10-27
  - Added max mem alloc option for mem dbg
  - Revamped IO filters 
  - Refactored IO::FilteredInputStream
  - Refactored IO::FilteredOutputStream
  - Removed Archive/LZHAMFilter
  - Removed Archive/CryptFilter
  - Added Crypt/AES128InputFilter
  - Added Crypt/AES128OutputFilter
  - Added Archive/LZHAMInputFilter
  - Added Archive/LZHAMOutputFilter
  - Added Archive/LZ4InputFilter
  - Added Archive/LZ4OutputFilter
  - Added Archive/SnappyInputFilter
  - Added Archive/SnappyOutputFilter
  - Fixed IO::MemOutputStream MemPool copy 
  - Fixed IO::MemInputStream read EOF
0.1.42 - 2015-10-14
  - Fixed map read & write in SimpleBuffers
0.1.41 - 2015-10-13
  - Added support for const in SimpleBuffers
0.1.40 - 2015-10-13
  - Added support for const in SimpleBuffers
0.1.39 - 2015-10-12
  - Fixed NDK build
0.1.38 - 2015-10-11
  - Revamped mem stats / mem leak detector - moved all functionality from C++ to C (C++ relays to C now)
  - Fixed SimpleBuffer::JSONWriter::WriteBLOB not writing field separator + indent + newline
  - Added SimpleBuffer::BINWriter
  - Added SimpleBuffer::BINReader
  - Added Mem::New, Mem::Delete, Mem::NewArr, Mem::DeleteArr
0.1.37 - 2015-09-27
  - Added x86 build for NDK
  - Fixed IObject not being used for non-abstract classes
  - Fixed IObject used in abstract classes
0.1.36 - 2015-09-20
  - Read from an array in SimpleBuffer will return Status_NoMoreItems at the end of the array
  - SimpleBuffer is using \r\n as line terminator for generators now
  - Added support for member params in SimpleBuffer (member=name, getter=name, setter=name, optional=false, default=value)
  - Getter in SimpleBuffer are not const and non const
0.1.35 - 2015-09-14
  - added SimpleBuffers::IWriter::WriteBLOB(data, size)
0.1.34 - 2015-09-14
  - added SimpleBuffers::IWriter::WriteEnum
  - added SimpleBuffers::IReader::ReadEnum
  - escaped SimpleBuffers::IWriter::WriteString
0.1.33 - 2015-09-12
  - added watermark in files generated by SimpleBuffersCompiler
  - added SimpleBuffers/Version.hpp
  - added flags support for Network::HTTP::Client::Open
  - added support for debug in Network::HTTP::Client
  - added support for persistent cookies in Network::HTTP::Client
0.1.32 - 2015-09-09
  - added Network::URLParser:Encode
  - added Network::URLParser:Decode
  - added optional member support in SimpleBuffers
  - added member name support in SimpleBuffers
  - fixed SimpleBuffersParser
0.1.31 - 2015-09-06
  - added UChar type (unsigned char)
  - Added Str::StringHelper::Compare
  - Added Str::StringHelper::Split
  - Added Str::StringHelper::Strip
  - Added Str::StringHelper::Replace
0.1.30 - 2015-09-05
  - Fixed Network::HTTP::Client::DownloadURL
0.1.29 - 2015-09-04
  - Added Network::HTTP::URLParser
  - Added Network::HTTP::Client::DownloadURL
  - Added Str::StringHelper
0.1.28 - 2015-09-01
  - Added IO::IOutputStream::Flush
  - Added flush & lock to Log::StreamOutput
  - Fixed snappy SDL warnings
  - Updated lzham with latest sources from github + patch for android
  - Added cURL contrib
  - Added Network/HTTP/Client
  - Removed Test/FilterTest
  - Refactored Test/PlayGround
0.1.27 - 2015-08-30
  - Added ScopePtr
  - Fixed copyright in files
  - Fixed LZHAM usage of malloc_usable_size (android issues)
  - Added IO/IFileSysEnumerator
  - Added IO/LocalFileSysEnumerator
  - Switched Windows FileInputStream & FileOutputStream to Win32 API (from FILE)
  - Fixed CX_API missing from some classes
  - Moved SimpleBuffers/BLOB to /
  - Added LZ4 contrib
  - Added Snappy contrib
  - Added some testers
  - Print should still work event when args are wrong (a Print(out, "test {3}") when there are only 2 args should result in "test {3}")
  - Added IO::IFilter::Reset method
0.1.26 - 2015-08-23
  - fixed Src/Str/Platform/UTF8_windows.cpp line 116 ( removed invalid NULL == szUTF8 return)
  - fixed IO::Helper CopyStream (EOF issue)
  - renamed Archive to SimpleBuffers
  - renamed ArchiveCompiler to SimpleBuffersCompiler
  - added missing info files for SparseHash contrib
  - added Status_Duplicate
  - added IO::IFilter
  - added IO::FilteredInputStream
  - added IO::FilteredOutputStream
  - added IO::BlockFilter
  - added LZHAM contrib
  - added Archive::LZHAMFilter
  - added TinyAES128 contrib
  - added Crypt::AES128Filter
0.1.25 - 2015-08-13
  - fixed typos
  - removed IO/IDataReader
  - removed IO/IDataWriter
  - added IO/Helper::LoadStream
  - added CX/Archive
  - added Tool/ArchiveCompiler (ac)
  - added CX_UNUSED
  - added operator bool for Status
  - added operator StatusCode for Status
0.1.24 - 2015-08-03
  - replaced calls to new to new (std::nothrow)
  - fixed automatic detected issues
0.1.23 - 2015-07-19
  - Increased Print internal ToString buffer from 1KB to 8KB
  - Added support for ignored allocs in mem leak detector
  - Added ignored allocs list (static vars)
0.2.22 - 2015-07-08
  - Fixed wide char case order policies (on win os)
0.2.21 - 2015-07-07
  - Added wide char case order policies
0.1.21 - 2015-07-06
  - small fix for BLAKE2Hash (SIZE not declared as static const var)
0.2.20 - 2015-07-05
  - Fixed xxhash.h included as xxHash.h (xcode)
  - Added BLAKE2 hash
0.1.19 - 2015-07-04
  - Fixed ToString<long> & ToString<unsigned long> not defined on iOS
  - Fixed missing contrib sources in XCODE project
0.1.18 - 2015-07-02
  - changed XCODE project name to uppercase (CX)
  - fixed CC_TARGET_OS_IPHONE not defined
0.1.17 - 2015-07-01
  - removed function
  - removed container
  - switched to std::function for Thread
  - refactored cross platform support
  - added XCODE buildsys (ios)
0.1.16 - 2015-06-30
  - fixed header names in messages
  - removed KVDB
  - removed ForestDB contrib
0.1.15 - 2015-06-20
  - Fixed htonl used in UTF8ToUCS4 (NDK)
  - Check for debug/release in NDK build
  - Fixed StreamOutput.cpp being used multiple times in NDK makefile
  - Removed GCC build sys
  - More fixes for NDK build sys
  - Moved KVDB::MemDatabase::MAGIC initialization to cpp file (NDK complaining while linking)
  - Added SparseHashHelper.hpp (specialize CX::String & CX::WString hash for posix)
  - Fixed Src/Str/UTF8_windows.cpp (storing 0 as a string char at the end) (again!)
0.1.14 - 2015-04-15
  - Fixed string conversions
0.1.13 - 2015-06-14
  - Fixed using missing Src/IO/Scope.hpp
  - Fixed Src/Str/UTF8_windows.cpp (storing 0 as a string char at the end)
  - Added Lock, RWLock, Process, Thread for Android (nop mostly)
0.1.12 - 2015-06-09
  - Initial support for NDK build sys
0.1.11 - 2015-06-08
  - Moved json input stream header from src to include
  - Reduced json input stream stack usage from 16KB to 8KB
  - Removed SB
  - Added doc for CX::Mem::PrintAllocs
  - Fixed PlayGround tester (usage of CX::Mem::PrintAllocs)
0.1.10 - 2015-05-03
  - Initial support for GCC / linux build
0.1.9 - 2015-04-23
  - PDB files are copied next to cx libs
  - Added IO::IFileSysHelper::GetPathSep
  - Added IO::IFileSysHelper::AppendPath
  - Added IO::IFileSysHelper::IsAbsPath
  - Fixed KVDB::MemDatabase save & load
  - Fixed KVDB::MemIterator::Get
  - Fixed KVDB::MemIterator::GetKeySize
  - Fixed KVDB::MemTable not using set_deleted_key
  - Fixed KVDB::MemDatabase not using set_deleted_key
  - Small fix in Log::DefaultFormatter (extra space in output)
0.1.8 - 2015-04-21
  - Added RCMemBuffer
  - Added Mem KVDB (not ready for use)
  - Fixed VS Code Analysis warnings for ForestDB
  - Added FileSysHelper
0.1.7 - 2015-04-19
  - Fixed Sparse/Dense MultiHashSet/MultiHashMap
  - Fixed typo in description
0.1.6 - 2015-04-18
  - Small fix in SB Generator
0.1.4 - 2015-04-18
  - Added SparseHashSet
  - Added SparseHashMap
  - Added DenseHashSet
  - Added DenseHashMap
  - Added SparseMultiHashSet
  - Added SparseMultiHashMap
  - Added DenseMultiHashSet
  - Added DenseMultiHashMap  
0.1.3 - 2015-04-16
  - Added Sys::Process
  - Added MT configurations
   