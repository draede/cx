/* 
 * CX - C++ framework for general purpose development
 *
 * https://github.com/draede/cx
 * 
 * Copyright (C) 2014 - 2022 draede - draede [at] outlook [dot] com
 *
 * Released under the MIT License.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ 
 
#include "CX/precomp.hpp"
#include "CX/MemPack/Storage.hpp"


namespace CX
{

namespace MemPack
{

const UInt32 Storage::MIN_SIZE = sizeof(Storage) + Block::UNUSED_MIN_SIZE;    // we need at least an empty block
const UInt32 Storage::MAX_SIZE = Block::MAX_SIZE;

const Storage::ListEntryInfo Storage::VAR_BLOCKS_SIZES[LISTS_ALL_COUNT] = 
{
	{ 0, 12 },
	{ 13, 13 },
	{ 14, 14 },
	{ 15, 15 },
	{ 16, 16 },
	{ 17, 17 },
	{ 18, 18 },
	{ 19, 19 },
	{ 20, 20 },
	{ 21, 21 },
	{ 22, 22 },
	{ 23, 23 },
	{ 24, 24 },
	{ 25, 25 },
	{ 26, 26 },
	{ 27, 27 },
	{ 28, 28 },
	{ 29, 29 },
	{ 30, 30 },
	{ 31, 31 },
	{ 32, 32 },
	{ 33, 33 },
	{ 34, 34 },
	{ 35, 35 },
	{ 36, 36 },
	{ 37, 37 },
	{ 38, 38 },
	{ 39, 39 },
	{ 40, 40 },
	{ 41, 41 },
	{ 42, 42 },
	{ 43, 43 },
	{ 44, 44 },
	{ 45, 45 },
	{ 46, 46 },
	{ 47, 47 },
	{ 48, 48 },
	{ 49, 49 },
	{ 50, 50 },
	{ 51, 51 },
	{ 52, 52 },
	{ 53, 53 },
	{ 54, 54 },
	{ 55, 55 },
	{ 56, 56 },
	{ 57, 57 },
	{ 58, 58 },
	{ 59, 59 },
	{ 60, 60 },
	{ 61, 61 },
	{ 62, 62 },
	{ 63, 63 },
	{ 64, 64 },
	{ 65, 65 },
	{ 66, 66 },
	{ 67, 67 },
	{ 68, 68 },
	{ 69, 69 },
	{ 70, 70 },
	{ 71, 71 },
	{ 72, 72 },
	{ 73, 73 },
	{ 74, 74 },
	{ 75, 75 },
	{ 76, 76 },
	{ 77, 77 },
	{ 78, 78 },
	{ 79, 79 },
	{ 80, 80 },
	{ 81, 81 },
	{ 82, 82 },
	{ 83, 83 },
	{ 84, 84 },
	{ 85, 85 },
	{ 86, 86 },
	{ 87, 87 },
	{ 88, 88 },
	{ 89, 89 },
	{ 90, 90 },
	{ 91, 91 },
	{ 92, 92 },
	{ 93, 93 },
	{ 94, 94 },
	{ 95, 95 },
	{ 96, 96 },
	{ 97, 97 },
	{ 98, 98 },
	{ 99, 99 },
	{ 100, 100 },
	{ 101, 101 },
	{ 102, 102 },
	{ 103, 103 },
	{ 104, 104 },
	{ 105, 105 },
	{ 106, 106 },
	{ 107, 107 },
	{ 108, 108 },
	{ 109, 109 },
	{ 110, 110 },
	{ 111, 111 },
	{ 112, 112 },
	{ 113, 113 },
	{ 114, 114 },
	{ 115, 115 },
	{ 116, 116 },
	{ 117, 117 },
	{ 118, 118 },
	{ 119, 119 },
	{ 120, 120 },
	{ 121, 121 },
	{ 122, 122 },
	{ 123, 123 },
	{ 124, 124 },
	{ 125, 125 },
	{ 126, 126 },
	{ 127, 127 },
	{ 128, 128 },
	{ 129, 136 },
	{ 137, 144 },
	{ 145, 152 },
	{ 153, 160 },
	{ 161, 168 },
	{ 169, 176 },
	{ 177, 184 },
	{ 185, 192 },
	{ 193, 200 },
	{ 201, 208 },
	{ 209, 216 },
	{ 217, 224 },
	{ 225, 232 },
	{ 233, 240 },
	{ 241, 248 },
	{ 249, 256 },
	{ 257, 272 },
	{ 273, 288 },
	{ 289, 304 },
	{ 305, 320 },
	{ 321, 336 },
	{ 337, 352 },
	{ 353, 368 },
	{ 369, 384 },
	{ 385, 400 },
	{ 401, 416 },
	{ 417, 432 },
	{ 433, 448 },
	{ 449, 464 },
	{ 465, 480 },
	{ 481, 496 },
	{ 497, 512 },
	{ 513, 544 },
	{ 545, 576 },
	{ 577, 608 },
	{ 609, 640 },
	{ 641, 672 },
	{ 673, 704 },
	{ 705, 736 },
	{ 737, 768 },
	{ 769, 800 },
	{ 801, 832 },
	{ 833, 864 },
	{ 865, 896 },
	{ 897, 928 },
	{ 929, 960 },
	{ 961, 992 },
	{ 993, 1024 },
	{ 1025, 1088 },
	{ 1089, 1152 },
	{ 1153, 1216 },
	{ 1217, 1280 },
	{ 1281, 1344 },
	{ 1345, 1408 },
	{ 1409, 1472 },
	{ 1473, 1536 },
	{ 1537, 1600 },
	{ 1601, 1664 },
	{ 1665, 1728 },
	{ 1729, 1792 },
	{ 1793, 1856 },
	{ 1857, 1920 },
	{ 1921, 1984 },
	{ 1985, 2048 },
	{ 2049, 2176 },
	{ 2177, 2304 },
	{ 2305, 2432 },
	{ 2433, 2560 },
	{ 2561, 2688 },
	{ 2689, 2816 },
	{ 2817, 2944 },
	{ 2945, 3072 },
	{ 3073, 3200 },
	{ 3201, 3328 },
	{ 3329, 3456 },
	{ 3457, 3584 },
	{ 3585, 3712 },
	{ 3713, 3840 },
	{ 3841, 3968 },
	{ 3969, 4096 },
	{ 4097, 4352 },
	{ 4353, 4608 },
	{ 4609, 4864 },
	{ 4865, 5120 },
	{ 5121, 5376 },
	{ 5377, 5632 },
	{ 5633, 5888 },
	{ 5889, 6144 },
	{ 6145, 6400 },
	{ 6401, 6656 },
	{ 6657, 6912 },
	{ 6913, 7168 },
	{ 7169, 7424 },
	{ 7425, 7680 },
	{ 7681, 7936 },
	{ 7937, 8192 },
	{ 8193, 8704 },
	{ 8705, 9216 },
	{ 9217, 9728 },
	{ 9729, 10240 },
	{ 10241, 10752 },
	{ 10753, 11264 },
	{ 11265, 11776 },
	{ 11777, 12288 },
	{ 12289, 12800 },
	{ 12801, 13312 },
	{ 13313, 13824 },
	{ 13825, 14336 },
	{ 14337, 14848 },
	{ 14849, 15360 },
	{ 15361, 15872 },
	{ 15873, 16384 },
};

}//namespace MemPack

}//namespace CX
